from abc import ABC, abstractmethod
from typing import List, Dict, Any, Optional


class BaseLLM(ABC):
    """
    Abstract base class for language models (LLM).
    Defines the methods that any LLM implementation must provide.
    """
    
    @abstractmethod
    def generate(self, prompt: str) -> str:
        """
        Generates text from a simple prompt.
        
        Args:
            prompt (str): The prompt or instruction for the model.
            
        Returns:
            str: The text generated by the model.
        """
        pass
    
    @abstractmethod
    def generate_with_history(self, history: List[Dict[str, str]], user_input: str) -> str:
        """
        Generates text considering the conversation history.
        
        Args:
            history (List[Dict[str, str]]): List of previous messages in the format
                                          [{"role": "user", "content": "message"}, 
                                           {"role": "assistant", "content": "response"}]
            user_input (str): The user's current message.
            
        Returns:
            str: The text generated by the model.
        """
        pass
    
    @abstractmethod
    def extract_info(self, conversation_text: str) -> Dict[str, Any]:
        """
        Extracts structured information from a conversation.
        
        Args:
            conversation_text (str): The full text of the conversation.
            
        Returns:
            Dict[str, Any]: A dictionary with the extracted information, such as
                          {"name": "John", "company": "ACME", ...}
        """
        pass
    
    def get_system_prompt(self) -> str:
        """
        Gets the current system prompt.
        
        Returns:
            str: The system prompt.
        """
        return getattr(self, "system_prompt", "")
    
    def set_system_prompt(self, prompt: str) -> None:
        """
        Sets a new system prompt.
        
        Args:
            prompt (str): The new system prompt.
        """
        self.system_prompt = prompt